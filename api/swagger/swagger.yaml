swagger: "2.0"
info:
  version: "1.0"
  title: Barber API
host: localhost:3000
basePath: /
schemes:
  - http
  - https
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: |
     For accessing the API a valid JWT token must be passed in all the queries in
     the 'Authorization' header.
  
  
     A valid JWT token is generated by the API and retourned as answer of a call
     to the route /login giving a valid email & password.
  
  
     The following syntax must be used in the 'Authorization' header :
  
         Bearer xxxxxx.yyyyyyy.zzzzzz
consumes:
  - application/json
  - application/x-www-form-urlencoded
  - multipart/form-data
produces:
  - application/json
tags:
  - name: Cliente
    description: "Tudo sobre o cliente"
  - name: Funcionário
    description: "Tudo sobre o funcionário"
  - name: Serviço
    description: "Tudo sobre o serviço"
  - name: Agendamento
    description: "Tudo sobre o agendamento"
paths:
  /usuario/registrar/funcionario:
    x-swagger-router-controller: usuario.controller
    post:
      operationId: registrarUsuario
      description: "Registra um funcionario"
      security:
        - Bearer: []
      x-security-scopes:
        - funcionario
      tags:
        - Funcionário
      parameters:
        - name: registration
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Login"
        "400":
          description: "Default Error"
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /usuario/registrar/cliente:
    x-swagger-router-controller: usuario.controller
    post:
      operationId: registrarUsuario
      description: "Registra um cliente"
      tags:
        - Cliente
      parameters:
        - name: registration
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Login"
        "400":
          description: "Default Error"
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /usuario/login:
    x-swagger-router-controller: usuario.controller
    post:
      operationId: loginUsuario
      description: "Loga com um usuário"
      tags:
        - Cliente
        - Funcionário
      parameters:
        - name: authentication
          in: body
          required: true
          schema:
            $ref: "#/definitions/Authentication"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Login"
        "400":
          description: "Default Error"
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /usuario/login/cliente:
    x-swagger-router-controller: usuario.controller
    post:
      operationId: loginUsuario
      description: "Loga com um usuário"
      tags:
        - Cliente
      parameters:
        - name: authentication
          in: body
          required: true
          schema:
            $ref: "#/definitions/Authentication"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Login"
        "400":
          description: "Default Error"
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /usuario/{email}:
    x-swagger-router-controller: usuario.controller
    put:
      operationId: atualizarUsuario
      description: "Atualiza informações de um usuário"
      security:
        - Bearer: []
      x-security-scopes:
        - funcionario
      tags:
        - Funcionário
      parameters:
        - in: path
          name: email
          type: string
          required: true
          description: "Email do usuário"
        - name: updateUser
          in: body
          required: true
          schema:
            $ref: "#/definitions/UpdateUser"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        "400":
          description: "Default Error"
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    delete:
      operationId: bloquearUsuario
      description: "Bloquear um usuário"
      security:
        - Bearer: []
      x-security-scopes:
        - funcionario
      tags:
        - Funcionário
      parameters:
        - in: path
          name: email
          type: string
          required: true
          description: "Email do usuário"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        "400":
          description: "Default Error"
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /usuario/{email}/unlock:
    x-swagger-router-controller: usuario.controller
    put:
      operationId: desbloquearUsuario
      description: "Desbloquear um usuário"
      security:
        - Bearer: []
      x-security-scopes:
        - funcionario
      tags:
        - Funcionário
      parameters:
        - in: path
          name: email
          type: string
          required: true
          description: "Email do usuário"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        "400":
          description: "Default Error"
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /usuario:
    x-swagger-router-controller: usuario.controller
    get:
      operationId: visualizarUsuario
      description: "Visualiza informações do seu usuário"
      security:
        - Bearer: []
      x-security-scopes:
        - funcionario
        - cliente
      tags:
        - Funcionário
        - Cliente
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/User"
        "400":
          description: "Default Error"
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    put:
      operationId: atualizarUsuario
      description: "Atualiza informações do seu usuário"
      security:
        - Bearer: []
      x-security-scopes:
        - funcionario
        - cliente
      tags:
        - Funcionário
        - Cliente
      parameters:
        - name: updateUser
          in: body
          required: true
          schema:
            $ref: "#/definitions/UpdateUser"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        "400":
          description: "Default Error"
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /servico:
    x-swagger-router-controller: servico.controller
    get:
      operationId: visualizarServicos
      description: "Visualiza todos os serviços"
      security:
        - Bearer: []
      x-security-scopes:
        - funcionario
        - cliente
      tags:
        - Serviço
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AllServices"
        "400":
          description: "Default Error"
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    post:
      operationId: criarServico
      description: "Cria um serviço"
      security:
        - Bearer: []
      x-security-scopes:
        - funcionario
      tags:
        - Serviço
      parameters:
        - name: service
          in: body
          required: true
          schema:
            $ref: "#/definitions/Service"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        "400":
          description: "Default Error"
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /servico/{id}:
    x-swagger-router-controller: servico.controller
    get:
      operationId: visualizarServico
      description: "Visualiza informações de um serviço"
      security:
        - Bearer: []
      x-security-scopes:
        - funcionario
        - cliente
      tags:
        - Serviço
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: "Id do serviço"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Service"
        "400":
          description: "Default Error"
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    put:
      operationId: atualizarServico
      description: "Atualiza informações de um serviço"
      security:
        - Bearer: []
      x-security-scopes:
        - funcionario
      tags:
        - Serviço
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: "Id do serviço"
        - name: service
          in: body
          required: true
          schema:
            $ref: "#/definitions/Service"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        "400":
          description: "Default Error"
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    delete:
      operationId: bloquearServico
      description: "Remove um serviço"
      security:
        - Bearer: []
      x-security-scopes:
        - funcionario
      tags:
        - Serviço
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: "Id do serviço"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        "400":
          description: "Default Error"
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /servico/{id}/unlock:
    x-swagger-router-controller: servico.controller
    put:
      operationId: desbloquearServico
      description: "Desbloqueia um serviço"
      security:
        - Bearer: []
      x-security-scopes:
        - funcionario
      tags:
        - Serviço
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: "Id do serviço"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        "400":
          description: "Default Error"
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /agendamento:
    x-swagger-router-controller: agendamento.controller
    get:
      operationId: visualizarAgendamentos
      description: "Visualiza todos os agendamento"
      security:
        - Bearer: []
      x-security-scopes:
        - funcionario
      tags:
        - Agendamento
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AllSchedules"
        "400":
          description: "Default Error"
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /agendamento/{id}:
    x-swagger-router-controller: agendamento.controller
    put:
      operationId: atualizarAgendamento
      description: "Atualiza um agendamento"
      security:
        - Bearer: []
      x-security-scopes:
        - funcionario
      tags:
        - Agendamento
      parameters:
        - in: path
          name: id
          type: integer
          required: true
          description: "Id do agendamento"
        - name: schedule
          in: body
          required: true
          schema:
            $ref: "#/definitions/UpdateSchedule"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        "400":
          description: "Default Error"
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /agendamento/cliente:
    x-swagger-router-controller: agendamento.controller
    get:
      operationId: visualizarAgendamentosCliente
      description: "Visualiza todos os agendamentos de um cliente"
      security:
        - Bearer: []
      x-security-scopes:
        - cliente
      tags:
        - Cliente
        - Agendamento
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AllSchedules"
        "400":
          description: "Default Error"
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    post:
      operationId: solicitarAgendamento
      description: "Solicita um agendamento"
      security:
        - Bearer: []
      x-security-scopes:
        - cliente
      tags:
        - Cliente
        - Agendamento
      parameters:
        - name: schedule
          in: body
          required: true
          schema:
            $ref: "#/definitions/Schedule"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        "400":
          description: "Default Error"
          schema:
            $ref: "#/definitions/Error"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
definitions:
  Authentication:
    type: object
    properties:
      email:
        type: string
        format: email
        example: "email@example.com"
      senha:
        type: string
        example: "password123"
  UpdateUser:
    type: object
    properties:
      nome:
        type: string
        example: "Nome"
      senha:
        type: string
        example: "password123"
  User:
    type: object
    properties:
      nome:
        type: string
        example: "Nome"
      cpf:
        type: string
        example: "111111111"
      email:
        type: string
        format: email
        example: "email@example.com"
      senha:
        type: string
        example: "password123"
      cargo:
        type: string
        example: "FUNCIONARIO"
  AllServices:
    type: object
    properties:
      total:
        type: integer
        example: 1
      servicos:
        type: array
        items:
          $ref: '#/definitions/Service'
  AllSchedules:
    type: object
    properties:
      total:
        type: integer
        example: 1
      agendamentos:
        type: array
        items:
          $ref: '#/definitions/Schedule'
  UpdateSchedule:
    type: object
    properties:
      situacao:
        type: string
        example: "MARCADO"
      pagamento:
        type: string
        example: "PENDENTE"
  Schedule:
    type: object
    properties:
      horario:
        type: string
        example: "1527568589"
      situacao:
        type: string
        example: "MARCADO"
      pagamento:
        type: string
        example: "PENDENTE"
      servicos:
        type: array
        items:
          $ref: '#/definitions/Service'
      cliente:
        type: string
        example: "email@example.com"
  Service:
    type: object
    properties:
      id:
        type: string
        example: "1"
      descricao:
        type: string
        example: "Corte de Cabelo"
      valor:
        type: number
        format: float
  Login:
    type: object
    properties:
      token:
        type: string
      cargo:
        type: string
  Success:
    type: object
    properties:
      message:
        type: string
  Error:
    type: object
    properties:
      message:
        type: string